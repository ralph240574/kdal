// Code generated by moshi-kotlin-codegen. Do not edit.
package com.weather.android.kdal.model

import com.squareup.moshi.*
import java.lang.NullPointerException
import kotlin.Double
import kotlin.Int
import kotlin.Long
import kotlin.String

class V3WxConditionsHistoricalHourlyJsonAdapter(moshi: Moshi) : JsonAdapter<V3WxConditionsHistoricalHourly>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("cloudCeiling", "dayOfWeek", "dayOrNight", "expirationTimeUtc", "iconCode", "precip24Hour", "pressureAltimeter", "pressureChange", "pressureMeanSeaLevel", "pressureTendencyCode", "pressureTendencyTrend", "relativeHumidity", "snow24Hour", "sunriseTimeLocal", "sunriseTimeUtc", "sunsetTimeLocal", "sunsetTimeUtc", "temperature", "temperatureChange24Hour", "temperatureDewPoint", "temperatureFeelsLike", "temperatureHeatIndex", "temperatureMax24Hour", "temperatureMaxSince7Am", "temperatureMin24Hour", "temperatureWindChill", "uvDescription", "uvIndex", "validTimeLocal", "validTimeUtc", "visibility", "windDirection", "windDirectionCardinal", "windGust", "windSpeed", "wxPhraseLong")

    private val listOfNullableIntAdapter: JsonAdapter<List<Int?>> =
            moshi.adapter<List<Int?>>(Types.newParameterizedType(List::class.java, Int::class.java)).nonNull()

    private val listOfStringAdapter: JsonAdapter<List<String>> =
            moshi.adapter<List<String>>(Types.newParameterizedType(List::class.java, String::class.java)).nonNull()

    private val listOfLongAdapter: JsonAdapter<List<Long>> =
            moshi.adapter<List<Long>>(Types.newParameterizedType(List::class.java, java.lang.Long::class.java)).nonNull()

    private val listOfNullableDoubleAdapter: JsonAdapter<List<Double?>> =
            moshi.adapter<List<Double?>>(Types.newParameterizedType(List::class.java, Double::class.java)).nonNull()

    private val listOfNullableStringAdapter: JsonAdapter<List<String?>> =
            moshi.adapter<List<String?>>(Types.newParameterizedType(List::class.java, String::class.java)).nonNull()

    private val listOfNullableLongAdapter: JsonAdapter<List<Long?>> =
            moshi.adapter<List<Long?>>(Types.newParameterizedType(List::class.java, Long::class.java)).nonNull()

    override fun toString(): String = "GeneratedJsonAdapter(V3WxConditionsHistoricalHourly)"

    override fun fromJson(reader: JsonReader): V3WxConditionsHistoricalHourly {
        var cloudCeiling: List<Int?>? = null
        var dayOfWeek: List<String>? = null
        var dayOrNight: List<String>? = null
        var expirationTimeUtc: List<Long>? = null
        var iconCode: List<Int?>? = null
        var precip24Hour: List<Double?>? = null
        var pressureAltimeter: List<Double?>? = null
        var pressureChange: List<Double?>? = null
        var pressureMeanSeaLevel: List<Double?>? = null
        var pressureTendencyCode: List<Int?>? = null
        var pressureTendencyTrend: List<String?>? = null
        var relativeHumidity: List<Int?>? = null
        var snow24Hour: List<Double?>? = null
        var sunriseTimeLocal: List<String?>? = null
        var sunriseTimeUtc: List<Long?>? = null
        var sunsetTimeLocal: List<String?>? = null
        var sunsetTimeUtc: List<Long?>? = null
        var temperature: List<Int?>? = null
        var temperatureChange24Hour: List<Int?>? = null
        var temperatureDewPoint: List<Int?>? = null
        var temperatureFeelsLike: List<Int?>? = null
        var temperatureHeatIndex: List<Int?>? = null
        var temperatureMax24Hour: List<Int?>? = null
        var temperatureMaxSince7Am: List<Int?>? = null
        var temperatureMin24Hour: List<Int?>? = null
        var temperatureWindChill: List<Int?>? = null
        var uvDescription: List<String?>? = null
        var uvIndex: List<Int?>? = null
        var validTimeLocal: List<String>? = null
        var validTimeUtc: List<Long>? = null
        var visibility: List<Double?>? = null
        var windDirection: List<Int?>? = null
        var windDirectionCardinal: List<String?>? = null
        var windGust: List<Int?>? = null
        var windSpeed: List<Int?>? = null
        var wxPhraseLong: List<String?>? = null
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> cloudCeiling = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'cloudCeiling' was null at ${reader.path}")
                1 -> dayOfWeek = listOfStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'dayOfWeek' was null at ${reader.path}")
                2 -> dayOrNight = listOfStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'dayOrNight' was null at ${reader.path}")
                3 -> expirationTimeUtc = listOfLongAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'expirationTimeUtc' was null at ${reader.path}")
                4 -> iconCode = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'iconCode' was null at ${reader.path}")
                5 -> precip24Hour = listOfNullableDoubleAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'precip24Hour' was null at ${reader.path}")
                6 -> pressureAltimeter = listOfNullableDoubleAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'pressureAltimeter' was null at ${reader.path}")
                7 -> pressureChange = listOfNullableDoubleAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'pressureChange' was null at ${reader.path}")
                8 -> pressureMeanSeaLevel = listOfNullableDoubleAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'pressureMeanSeaLevel' was null at ${reader.path}")
                9 -> pressureTendencyCode = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'pressureTendencyCode' was null at ${reader.path}")
                10 -> pressureTendencyTrend = listOfNullableStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'pressureTendencyTrend' was null at ${reader.path}")
                11 -> relativeHumidity = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'relativeHumidity' was null at ${reader.path}")
                12 -> snow24Hour = listOfNullableDoubleAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'snow24Hour' was null at ${reader.path}")
                13 -> sunriseTimeLocal = listOfNullableStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'sunriseTimeLocal' was null at ${reader.path}")
                14 -> sunriseTimeUtc = listOfNullableLongAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'sunriseTimeUtc' was null at ${reader.path}")
                15 -> sunsetTimeLocal = listOfNullableStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'sunsetTimeLocal' was null at ${reader.path}")
                16 -> sunsetTimeUtc = listOfNullableLongAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'sunsetTimeUtc' was null at ${reader.path}")
                17 -> temperature = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperature' was null at ${reader.path}")
                18 -> temperatureChange24Hour = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureChange24Hour' was null at ${reader.path}")
                19 -> temperatureDewPoint = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureDewPoint' was null at ${reader.path}")
                20 -> temperatureFeelsLike = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureFeelsLike' was null at ${reader.path}")
                21 -> temperatureHeatIndex = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureHeatIndex' was null at ${reader.path}")
                22 -> temperatureMax24Hour = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureMax24Hour' was null at ${reader.path}")
                23 -> temperatureMaxSince7Am = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureMaxSince7Am' was null at ${reader.path}")
                24 -> temperatureMin24Hour = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureMin24Hour' was null at ${reader.path}")
                25 -> temperatureWindChill = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'temperatureWindChill' was null at ${reader.path}")
                26 -> uvDescription = listOfNullableStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'uvDescription' was null at ${reader.path}")
                27 -> uvIndex = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'uvIndex' was null at ${reader.path}")
                28 -> validTimeLocal = listOfStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'validTimeLocal' was null at ${reader.path}")
                29 -> validTimeUtc = listOfLongAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'validTimeUtc' was null at ${reader.path}")
                30 -> visibility = listOfNullableDoubleAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'visibility' was null at ${reader.path}")
                31 -> windDirection = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'windDirection' was null at ${reader.path}")
                32 -> windDirectionCardinal = listOfNullableStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'windDirectionCardinal' was null at ${reader.path}")
                33 -> windGust = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'windGust' was null at ${reader.path}")
                34 -> windSpeed = listOfNullableIntAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'windSpeed' was null at ${reader.path}")
                35 -> wxPhraseLong = listOfNullableStringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'wxPhraseLong' was null at ${reader.path}")
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = V3WxConditionsHistoricalHourly(
                cloudCeiling = cloudCeiling ?: throw JsonDataException("Required property 'cloudCeiling' missing at ${reader.path}"),
                dayOfWeek = dayOfWeek ?: throw JsonDataException("Required property 'dayOfWeek' missing at ${reader.path}"),
                dayOrNight = dayOrNight ?: throw JsonDataException("Required property 'dayOrNight' missing at ${reader.path}"),
                expirationTimeUtc = expirationTimeUtc ?: throw JsonDataException("Required property 'expirationTimeUtc' missing at ${reader.path}"),
                iconCode = iconCode ?: throw JsonDataException("Required property 'iconCode' missing at ${reader.path}"),
                precip24Hour = precip24Hour ?: throw JsonDataException("Required property 'precip24Hour' missing at ${reader.path}"),
                pressureAltimeter = pressureAltimeter ?: throw JsonDataException("Required property 'pressureAltimeter' missing at ${reader.path}"),
                pressureChange = pressureChange ?: throw JsonDataException("Required property 'pressureChange' missing at ${reader.path}"),
                pressureMeanSeaLevel = pressureMeanSeaLevel ?: throw JsonDataException("Required property 'pressureMeanSeaLevel' missing at ${reader.path}"),
                pressureTendencyCode = pressureTendencyCode ?: throw JsonDataException("Required property 'pressureTendencyCode' missing at ${reader.path}"),
                pressureTendencyTrend = pressureTendencyTrend ?: throw JsonDataException("Required property 'pressureTendencyTrend' missing at ${reader.path}"),
                relativeHumidity = relativeHumidity ?: throw JsonDataException("Required property 'relativeHumidity' missing at ${reader.path}"),
                snow24Hour = snow24Hour ?: throw JsonDataException("Required property 'snow24Hour' missing at ${reader.path}"),
                sunriseTimeLocal = sunriseTimeLocal ?: throw JsonDataException("Required property 'sunriseTimeLocal' missing at ${reader.path}"),
                sunriseTimeUtc = sunriseTimeUtc ?: throw JsonDataException("Required property 'sunriseTimeUtc' missing at ${reader.path}"),
                sunsetTimeLocal = sunsetTimeLocal ?: throw JsonDataException("Required property 'sunsetTimeLocal' missing at ${reader.path}"),
                sunsetTimeUtc = sunsetTimeUtc ?: throw JsonDataException("Required property 'sunsetTimeUtc' missing at ${reader.path}"),
                temperature = temperature ?: throw JsonDataException("Required property 'temperature' missing at ${reader.path}"),
                temperatureChange24Hour = temperatureChange24Hour ?: throw JsonDataException("Required property 'temperatureChange24Hour' missing at ${reader.path}"),
                temperatureDewPoint = temperatureDewPoint ?: throw JsonDataException("Required property 'temperatureDewPoint' missing at ${reader.path}"),
                temperatureFeelsLike = temperatureFeelsLike ?: throw JsonDataException("Required property 'temperatureFeelsLike' missing at ${reader.path}"),
                temperatureHeatIndex = temperatureHeatIndex ?: throw JsonDataException("Required property 'temperatureHeatIndex' missing at ${reader.path}"),
                temperatureMax24Hour = temperatureMax24Hour ?: throw JsonDataException("Required property 'temperatureMax24Hour' missing at ${reader.path}"),
                temperatureMaxSince7Am = temperatureMaxSince7Am ?: throw JsonDataException("Required property 'temperatureMaxSince7Am' missing at ${reader.path}"),
                temperatureMin24Hour = temperatureMin24Hour ?: throw JsonDataException("Required property 'temperatureMin24Hour' missing at ${reader.path}"),
                temperatureWindChill = temperatureWindChill ?: throw JsonDataException("Required property 'temperatureWindChill' missing at ${reader.path}"),
                uvDescription = uvDescription ?: throw JsonDataException("Required property 'uvDescription' missing at ${reader.path}"),
                uvIndex = uvIndex ?: throw JsonDataException("Required property 'uvIndex' missing at ${reader.path}"),
                validTimeLocal = validTimeLocal ?: throw JsonDataException("Required property 'validTimeLocal' missing at ${reader.path}"),
                validTimeUtc = validTimeUtc ?: throw JsonDataException("Required property 'validTimeUtc' missing at ${reader.path}"),
                visibility = visibility ?: throw JsonDataException("Required property 'visibility' missing at ${reader.path}"),
                windDirection = windDirection ?: throw JsonDataException("Required property 'windDirection' missing at ${reader.path}"),
                windDirectionCardinal = windDirectionCardinal ?: throw JsonDataException("Required property 'windDirectionCardinal' missing at ${reader.path}"),
                windGust = windGust ?: throw JsonDataException("Required property 'windGust' missing at ${reader.path}"),
                windSpeed = windSpeed ?: throw JsonDataException("Required property 'windSpeed' missing at ${reader.path}"),
                wxPhraseLong = wxPhraseLong ?: throw JsonDataException("Required property 'wxPhraseLong' missing at ${reader.path}"))
        return result
    }

    override fun toJson(writer: JsonWriter, value: V3WxConditionsHistoricalHourly?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("cloudCeiling")
        listOfNullableIntAdapter.toJson(writer, value.cloudCeiling)
        writer.name("dayOfWeek")
        listOfStringAdapter.toJson(writer, value.dayOfWeek)
        writer.name("dayOrNight")
        listOfStringAdapter.toJson(writer, value.dayOrNight)
        writer.name("expirationTimeUtc")
        listOfLongAdapter.toJson(writer, value.expirationTimeUtc)
        writer.name("iconCode")
        listOfNullableIntAdapter.toJson(writer, value.iconCode)
        writer.name("precip24Hour")
        listOfNullableDoubleAdapter.toJson(writer, value.precip24Hour)
        writer.name("pressureAltimeter")
        listOfNullableDoubleAdapter.toJson(writer, value.pressureAltimeter)
        writer.name("pressureChange")
        listOfNullableDoubleAdapter.toJson(writer, value.pressureChange)
        writer.name("pressureMeanSeaLevel")
        listOfNullableDoubleAdapter.toJson(writer, value.pressureMeanSeaLevel)
        writer.name("pressureTendencyCode")
        listOfNullableIntAdapter.toJson(writer, value.pressureTendencyCode)
        writer.name("pressureTendencyTrend")
        listOfNullableStringAdapter.toJson(writer, value.pressureTendencyTrend)
        writer.name("relativeHumidity")
        listOfNullableIntAdapter.toJson(writer, value.relativeHumidity)
        writer.name("snow24Hour")
        listOfNullableDoubleAdapter.toJson(writer, value.snow24Hour)
        writer.name("sunriseTimeLocal")
        listOfNullableStringAdapter.toJson(writer, value.sunriseTimeLocal)
        writer.name("sunriseTimeUtc")
        listOfNullableLongAdapter.toJson(writer, value.sunriseTimeUtc)
        writer.name("sunsetTimeLocal")
        listOfNullableStringAdapter.toJson(writer, value.sunsetTimeLocal)
        writer.name("sunsetTimeUtc")
        listOfNullableLongAdapter.toJson(writer, value.sunsetTimeUtc)
        writer.name("temperature")
        listOfNullableIntAdapter.toJson(writer, value.temperature)
        writer.name("temperatureChange24Hour")
        listOfNullableIntAdapter.toJson(writer, value.temperatureChange24Hour)
        writer.name("temperatureDewPoint")
        listOfNullableIntAdapter.toJson(writer, value.temperatureDewPoint)
        writer.name("temperatureFeelsLike")
        listOfNullableIntAdapter.toJson(writer, value.temperatureFeelsLike)
        writer.name("temperatureHeatIndex")
        listOfNullableIntAdapter.toJson(writer, value.temperatureHeatIndex)
        writer.name("temperatureMax24Hour")
        listOfNullableIntAdapter.toJson(writer, value.temperatureMax24Hour)
        writer.name("temperatureMaxSince7Am")
        listOfNullableIntAdapter.toJson(writer, value.temperatureMaxSince7Am)
        writer.name("temperatureMin24Hour")
        listOfNullableIntAdapter.toJson(writer, value.temperatureMin24Hour)
        writer.name("temperatureWindChill")
        listOfNullableIntAdapter.toJson(writer, value.temperatureWindChill)
        writer.name("uvDescription")
        listOfNullableStringAdapter.toJson(writer, value.uvDescription)
        writer.name("uvIndex")
        listOfNullableIntAdapter.toJson(writer, value.uvIndex)
        writer.name("validTimeLocal")
        listOfStringAdapter.toJson(writer, value.validTimeLocal)
        writer.name("validTimeUtc")
        listOfLongAdapter.toJson(writer, value.validTimeUtc)
        writer.name("visibility")
        listOfNullableDoubleAdapter.toJson(writer, value.visibility)
        writer.name("windDirection")
        listOfNullableIntAdapter.toJson(writer, value.windDirection)
        writer.name("windDirectionCardinal")
        listOfNullableStringAdapter.toJson(writer, value.windDirectionCardinal)
        writer.name("windGust")
        listOfNullableIntAdapter.toJson(writer, value.windGust)
        writer.name("windSpeed")
        listOfNullableIntAdapter.toJson(writer, value.windSpeed)
        writer.name("wxPhraseLong")
        listOfNullableStringAdapter.toJson(writer, value.wxPhraseLong)
        writer.endObject()
    }
}
